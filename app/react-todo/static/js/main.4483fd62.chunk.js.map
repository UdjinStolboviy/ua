{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSerch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","key","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","obj","isEmpty","id","itemProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","event","preventDefault","onAdd","App","data","deleteItem","addItem","index","findIndex","elem","before","slice","after","body","newItem","nextId","old","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4483fd62.chunk.js","sourcesContent":["import AppHeader from './app-header';\nexport default AppHeader;","import React from 'react';\n\nimport './app-header.css'\n\nconst AppHeader = ({liked, allPosts}) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Udjin Stolboviy</h1>\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\n        </div>\n    )\n}\n\nexport default AppHeader;","import SearchPanel from './search-panel';\nexport default SearchPanel;","import React, {Component} from 'react';\n\nimport './search-panel.css';\n\n\nexport default class SearchPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            term: ''\n        }\n        this.onUpdateSerch =this.onUpdateSerch.bind(this)\n    }\n\n    onUpdateSerch(e) {\n        const term = e.target.value;\n        this.setState({ term });\n        this.props.onUpdateSerch(term);\n    }\n\n    render() {\n        return (<input\n            className=\"form-control search-input\"\n             type = \"text\"\n            placeholder=\"Поиск по записям\"\n            onChange={this.onUpdateSerch}\n        />\n         )\n    }\n}\n\n","import PostStatusFilter from './post-status-filter';\nexport default PostStatusFilter;","import React, {Component} from 'react';\n\n// import { Button } from 'react-bootstrap';\n\nimport './post-status-filter.css'\n\nexport default class PostStatusFilter extends Component {\n    constructor(props) {\n        super(props);\n        this.buttons = [\n            { name: 'all', label: 'Все' },\n            { name: 'like', label: 'Понравилась' }\n        ]\n    }\n\n    render() {\n        const buttons = this.buttons.map(({ name, label }) => {\n            const { filter, onFilterSelect } = this.props;\n            const active = filter === name;\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\n            return (\n                <button\n                    key={name}\n                    type=\"button\"\n                    className={`btn ${clazz}`}\n                    onClick={()=> onFilterSelect(name)}>{label}</button>\n\n            )\n        });\n\n        return (\n        <div className=\"btn-group\">\n           {/* < Button variant = \"outline-info\" > Все </Button> {' '} */}\n            {buttons}\n        </div>\n    )\n    }\n    \n}\n","import PostListItem from './post-list-item';\nexport default PostListItem;","import React, {Component} from 'react';\n\nimport './post-list-item.css';\n\nexport default class PostListItem extends Component {\n\n    render() {\n        const {label,onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;\n\n        let classNames = \"app-list-item d-flex justify-content-between\";\n        if (important) {\n            classNames += ' important';\n        }\n        if (like) {\n            classNames += ' like';\n        }\n    return (\n        <div className={classNames}>\n            <span \n                className=\"app-list-item-label\"\n                onClick={onToggleLiked}>\n                {label}\n            </span>\n            <div className=\"d-flex justify-content-center align-items-center\">\n                <button \n                type=\"button\" \n                className=\"btn-star btn-sm\"\n                onClick={onToggleImportant}>\n                    <i className=\"fa fa-star\"></i>\n                </button>\n                <button \n                type=\"button\" \n                    className=\"btn-trash btn-sm\"\n                onClick={onDelete}>\n                    <i className=\"fa fa-trash-o\"></i>\n                </button>\n                <i className=\"fa fa-heart\"></i>\n            </div>\n        </div>\n        )\n    }\n}\n","import PostList from './post-list';\nexport default PostList;","import React from 'react';\n\nimport PostListItem from '../post-list-item';\nimport './post-list.css'\n\nimport { ListGroup } from 'react-bootstrap'\n\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\n\n    const elements = posts.map( (item) => {\n        // Простой способ проверки на объект + содержится ли в нем информация\n        if ( typeof item === 'object' && isEmpty(item) ){ \n            const {id, ...itemProps} = item;\n            return (\n                <li key = {id} className='list-group-item'>\n                    <PostListItem\n                        {...itemProps}\n                        onDelete={() => onDelete(id)}\n                        onToggleImportant={() => onToggleImportant(id)}\n                        onToggleLiked={()=>onToggleLiked(id)}/>\n                </li>\n            )\n        }\n    })\n\n    function isEmpty(obj) {\n        for(let key in obj)\n        {\n            return true;\n        }\n        return false;\n    }\n\n    return (\n        \n        <ListGroup className=\"app-list\">\n           {elements}\n        </ListGroup>\n\n    )\n}\n\nexport default PostList;","import PostAddForm from './post-add-form';\nexport default PostAddForm;","import React, {Component} from 'react';\n\nimport './post-add-form.css'\n\nexport default class PostAddForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: ''\n        }\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    onValueChange(event) {\n        this.setState({\n            text: event.target.value\n        })\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        this.props.onAdd(this.state.text);\n        this.setState({\n            text: ''\n        });\n    }\n\n    render() {\n        return (<form\n            className=\"bottom-panel d-flex\"\n            onSubmit={this.onSubmit}>\n            <input type = \"text\"\n            placeholder = \"О чем вы думаете сейчас?\"\n                className=\"form-control new-post-label\"\n                onChange={this.onValueChange}\n                value={this.state.text}\n            />\n            <button type = \"submit\"\n            className = \"btn btn-outline-secondary\"\n             >\n            Добавить </button> \n            </form>\n        )\n   }\n}\n\n","import App from './app'\nexport default App;","import React, {Component} from 'react';\nimport nextId from \"react-id-generator\";\n\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport PostStatusFilter from '../post-status-filter';\nimport PostList from '../post-list';\nimport PostAddForm from '../post-add-form';\n\nimport './app.css';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [\n                { label: 'Going to learn React', important: true,like: false, id: 1 },\n                { label: 'That is so good', important: false,like: false, id: 2 },\n                { label: 'I need a break...', important: false,like: false, id: 3 }\n            ],\n            term: '',\n            filter: 'all'\n\n        };\n        this.deleteItem = this.deleteItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.onToggleImportant = this.onToggleImportant.bind(this);\n        this.onToggleLiked = this.onToggleLiked.bind(this);\n        this.onUpdateSerch = this.onUpdateSerch.bind(this);\n        this.onFilterSelect = this.onFilterSelect.bind(this);\n    }\n\n    deleteItem(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex((elem) => elem.id === id);\n\n            const before = data.slice(0, index);\n            const after = data.slice(index + 1);\n\n            const newArr = [...before, ...after];\n            return {\n                data: newArr\n            }\n        });\n    }\n\n    addItem(body) {\n        const newItem = {\n            label: body,\n            important: false,\n            id: nextId()\n        }\n        this.setState(({ data }) => {\n            const newArr = [...data, newItem];\n            return {\n                data: newArr\n            }\n        })\n    }\n\n    \n\n\n    onToggleImportant(id) {\n              this.setState(({ data }) => {\n            const index = data.findIndex(elem => elem.id === id);\n\n            const old = data[index];\n            const newItem = { ...old, important: !old.important };\n\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n\n            return {\n                data: newArr\n            }\n\n        })\n    }\n\n    onToggleLiked(id) {\n        this.setState(({ data }) => {\n            const index = data.findIndex(elem => elem.id === id);\n\n            const old = data[index];\n            const newItem = { ...old, like: !old.like };\n\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n\n            return {\n                data: newArr\n            }\n\n        })\n    }\n\n    searchPost(items, term) {\n        if (term.length === 0) {\n            return items\n        }\n\n        return items.filter((item) => {\n            return item.label.indexOf(term) > -1\n        });\n    }\n\n    filterPost(items, filter) {\n        if (filter === 'like') {\n            return items.filter(item => item.like)\n        } else {\n            return items\n        }\n    }\n\n    onUpdateSerch(term) {\n        this.setState({term})\n    }\n\n    onFilterSelect(filter) {\n        this.setState({filter})\n    }\n\n    render() {\n        const { data, term ,filter} = this.state;\n\n        const liked = data.filter(item => item.like).length;\n        const allPosts = data.length;\n\n        const visiblePosts = this.filterPost(this.searchPost(data, term) , filter);\n\n           return (\n       <div className=\"app\">\n                   <AppHeader\n                       liked={liked}\n                       allPosts={allPosts}/>\n            <div className=\"search-panel d-flex\">\n                       <SearchPanel\n                           onUpdateSerch={this.onUpdateSerch}/>\n                       <PostStatusFilter\n                           filter={filter}\n                           onFilterSelect={this.onFilterSelect}/>\n            </div>\n                   <PostList\n                       posts={visiblePosts}\n                       onDelete={this.deleteItem}\n                       onToggleImportant={this.onToggleImportant}\n                       onToggleLiked={this.onToggleLiked}\n                   />\n            <PostAddForm\n            onAdd={this.addItem}/>\n       </div>\n    )\n   }\n\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/app/';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n"],"sourceRoot":""}