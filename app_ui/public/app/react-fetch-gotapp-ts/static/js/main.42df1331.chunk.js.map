{"version":3,"sources":["components/header/index.tsx","components/header/header.tsx","services/gotService.tsx","components/spinner/index.tsx","components/spinner/spinner.tsx","components/errorMessage/error.jpg","components/errorMessage/index.tsx","components/errorMessage/errorMessage.tsx","components/randomChar/randomChar.tsx","components/randomChar/index.tsx","components/itemList/itemList.tsx","components/itemList/index.tsx","components/itemDetails/itemDetails.tsx","components/itemDetails/index.tsx","components/rowBlock/index.tsx","components/rowBlock/rowBlock.tsx","components/pages/characterPage.tsx","components/pages/booksPage.tsx","components/pages/housesPage.tsx","components/pages/booksItem.tsx","components/app/index.tsx","components/app/app.tsx","index.tsx"],"names":["Header","className","to","GotService","_apiBase","getResource","url","a","fetch","res","ok","Error","status","json","getAllBooks","map","_transformBook","getBook","id","book","getAllCharacters","_transformCharacter","getCharacter","character","getAllHouses","_transformHouse","getHouse","house","_extractId","item","match","char","name","isSet","gender","born","died","culture","region","words","titles","ancestralWeapons","numberOfPages","publisher","released","this","data","Spinner","ErrorMessage","src","img","alt","RandomChar","gotService","state","loading","error","timerId","defaultProps","interval","onCharLoaded","setState","onError","err","updateChar","Math","floor","random","then","catch","setInterval","clearInterval","errorMessage","spinner","content","Component","View","getData","ItemList","props","items","label","renderItem","onClick","onItemSelected","Field","field","CharDetails","updateItem","prevProps","itemId","React","Children","children","child","cloneElement","RowBlock","left","right","Row","Col","md","CharacterPage","selectedChar","itemList","itemDetails","BooksPage","selectedBook","history","push","withRouter","HousesPage","selectedHouse","BooksItem","bookId","App","showRandomChar","toggleRandomChar","console","log","Container","lg","span","offset","Button","variant","path","component","exact","render","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.42df1331.chunk.js","sourcesContent":["import Header from './header';\n\nexport default Header;","import React from 'react';\nimport './header.css';\nimport {Link} from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <h3 className=\"header-title\">\n                <Link to='/'>\n                Game of Thrones DB\n                </Link>\n            </h3>\n            <ul className=\"header-list\">\n                <li>\n                    <Link to='/characters/'>Characters</Link>\n                </li>\n                <li>\n                    <Link to='/houses/'>Houses</Link>\n                </li>\n                <li>\n                    <Link to='/books/'>Books</Link>   \n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Header;","export default class GotService {\n  _apiBase: string;\n  constructor() {\n    this._apiBase = \"https://www.anapioficeandfire.com/api\";\n  }\n\n  getResource = async (url: any) => {\n    const res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok) {\n      // eslint-disable-next-line no-useless-concat\n      throw new Error(`Could not fetch ${url}` + `, received ${res.status}`);\n    }\n    return await res.json();\n  };\n\n  getAllBooks = async () => {\n    const res = await this.getResource(`/books/`);\n    return res.map(this._transformBook);\n  };\n\n  getBook = async (id: any) => {\n    const book = await this.getResource(`/books/${id}/`);\n    return this._transformBook(book);\n  };\n\n  getAllCharacters = async () => {\n    const res = await this.getResource(`/characters?page=5&pageSize=10`);\n    return res.map(this._transformCharacter);\n  };\n\n  getCharacter = async (id: any) => {\n    const character = await this.getResource(`/characters/${id}`);\n    return this._transformCharacter(character);\n  };\n\n  getAllHouses = async () => {\n    const res = await this.getResource(`/houses/`);\n    return res.map(this._transformHouse);\n  };\n\n  getHouse = async (id: any) => {\n    const house = await this.getResource(`/houses/${id}/`);\n    return this._transformHouse(house);\n  };\n\n  isSet(data: any) {\n    if (data) {\n      return data;\n    } else {\n      return \"NO DATA\";\n    }\n  }\n\n  _extractId = (item: any) => {\n    const idRegExp = /\\/([0-9]*)$/;\n    return item.url.match(idRegExp)[1];\n  };\n\n  _transformCharacter = (char: any) => {\n    return {\n      id: this._extractId(char),\n      name: this.isSet(char.name),\n      gender: this.isSet(char.gender),\n      born: this.isSet(char.born),\n      died: this.isSet(char.died),\n      culture: this.isSet(char.culture),\n    };\n  };\n\n  _transformHouse = (house: any) => {\n    return {\n      id: this._extractId(house),\n      name: this.isSet(house.name),\n      region: this.isSet(house.region),\n      words: this.isSet(house.words),\n      titles: this.isSet(house.titles),\n      ancestralWeapons: this.isSet(house.ancestralWeapons),\n    };\n  };\n\n  _transformBook = (book: any) => {\n    return {\n      id: this._extractId(book),\n      name: this.isSet(book.name),\n      numberOfPages: this.isSet(book.numberOfPages),\n      publisher: this.isSet(book.publisher),\n      released: this.isSet(book.released),\n    };\n  };\n}\n","import Spinner from './spinner';\nexport default Spinner;","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"lds-css ng-scope\">\n            <div className=\"lds-spin\"><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div></div>\n        </div>\n    )\n}\n\nexport default Spinner;\n","export default __webpack_public_path__ + \"static/media/error.4a53f279.jpg\";","import ErrorMessage from './errorMessage';\nexport default ErrorMessage;","import React from 'react';\nimport './errorMessage.css';\nimport img from './error.jpg';\n\nconst ErrorMessage = () => {\n    return (\n        <>\n            <img src={img} alt='error'></img>\n            <span>Something goes wrong</span>\n        </>\n    )\n}\n\nexport default ErrorMessage;","import React, { Component } from \"react\";\nimport \"./randomChar.css\";\nimport gotService from \"../../services/gotService\";\nimport Spinner from \"../spinner\";\nimport ErrorMessage from \"../errorMessage\";\nimport { RandomCharIterface } from \"../interfece\";\n\nexport default class RandomChar extends Component<RandomCharIterface> {\n  gotService = new gotService();\n  state = {\n    char: {},\n    loading: true,\n    error: false,\n  };\n  timerId: any;\n  static defaultProps: { interval: number };\n  defaultProps = {\n    interval: 15000,\n  };\n\n  componentDidMount() {\n    this.updateChar();\n    this.timerId = setInterval(this.updateChar, 15000);\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerId);\n  }\n\n  onCharLoaded = (char: any) => {\n    this.setState({\n      char,\n      loading: false,\n    });\n  };\n\n  onError = (err: any) => {\n    this.setState({\n      error: true,\n      loading: false,\n    });\n  };\n\n  updateChar = () => {\n    const id = Math.floor(Math.random() * 140 + 25); //25-140\n    this.gotService\n      .getCharacter(id)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  };\n\n  render() {\n    const { char, loading, error } = this.state;\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? <View char={char} /> : null;\n\n    return (\n      <div className=\"random-block rounded\">\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst View = ({ char }: any) => {\n  const { name, gender, born, died, culture } = char;\n  return (\n    <>\n      <h4>Random Character: {name}</h4>\n      <ul className=\"list-group list-group-flush\">\n        <li className=\"list-group-item d-flex justify-content-between\">\n          <span className=\"term\">Gender </span>\n          <span>{gender}</span>\n        </li>\n        <li className=\"list-group-item d-flex justify-content-between\">\n          <span className=\"term\">Born </span>\n          <span>{born}</span>\n        </li>\n        <li className=\"list-group-item d-flex justify-content-between\">\n          <span className=\"term\">Died </span>\n          <span>{died}</span>\n        </li>\n        <li className=\"list-group-item d-flex justify-content-between\">\n          <span className=\"term\">Culture </span>\n          <span>{culture}</span>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import RandomChar from './randomChar';\n\nexport default RandomChar;","import React, { Component } from \"react\";\nimport \"./itemList.css\";\nimport Spinner from \"../spinner\";\nimport { ItemListInterface } from \"../interfece\";\nimport gotService from \"../../services/gotService\";\n\nfunction ItemList(props: any): JSX.Element | { data: any } {\n  function renderItems(arr: any) {\n    return arr.map((item: any) => {\n      const { id } = item;\n\n      const label = props.renderItem(item);\n\n      return (\n        <li\n          key={id}\n          className=\"list-group-item\"\n          onClick={() => props.onItemSelected(id)}\n        >\n          {label}\n        </li>\n      );\n    });\n  }\n  const { data }: any = props;\n\n  const items = renderItems(data);\n  return (\n    <>\n      <ul className=\"item-list list-group\">{items}</ul>\n    </>\n  );\n}\n\n// ItemList.defaultProps = {\n//   onItemSelected: () => {},\n// }\n//\nconst withData = (View: any, getData: () => Promise<any>) => {\n  return class extends Component<ItemListInterface, {}, any> {\n    state = {\n      data: null,\n    };\n    // static defaultProps: { onItemSelected: () => void; };\n\n    componentDidMount() {\n      getData().then((data: any) => {\n        this.setState({\n          data,\n        });\n      });\n    }\n    render(): JSX.Element {\n      const { data } = this.state;\n\n      if (!data) {\n        return <Spinner />;\n      }\n      return <View {...this.props} data={data} />;\n    }\n  };\n};\n\nconst { getAllCharacters } = new gotService();\nexport default withData(ItemList, getAllCharacters);\n","import ItemList from './itemList';\n\nexport default ItemList;","import React, { Component } from \"react\";\nimport \"./itemDetails.css\";\nimport { ItemDetailsInterface } from \"../interfece\";\n\nconst Field = ({\n  item,\n  field,\n  label,\n}: {\n  item?: any;\n  field: any;\n  label: string;\n}) => {\n  return (\n    <li className=\"list-group-item d-flex justify-content-between\">\n      <span className=\"term\">{label}</span>\n      <span>{item[field]}</span>\n    </li>\n  );\n};\n\nexport { Field };\n\nexport default class ItemDetails extends Component<\n  ItemDetailsInterface,\n  {},\n  any\n> {\n  state = {\n    item: null,\n  };\n\n  componentDidMount() {\n    this.updateItem();\n  }\n\n  componentDidUpdate(prevProps: any) {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.updateItem();\n    }\n  }\n\n  updateItem() {\n    const { itemId, getData } = this.props;\n    if (!itemId) {\n      return;\n    }\n\n    getData(itemId).then((item: any) => {\n      this.setState({ item });\n    });\n  }\n\n  render() {\n    if (!this.state.item) {\n      return (\n        <span className=\"select-error\">Please select item in the list</span>\n      );\n    }\n    const { item } = this.state;\n    const { name }: any = item;\n\n    return (\n      <div className=\"char-details rounded\">\n        <h4>{name}</h4>\n        <ul className=\"list-group list-group-flush\">\n          {React.Children.map(this.props.children, (child) => {\n            return React.cloneElement(child, { item });\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import CharDetails, {Field} from './itemDetails';\nexport {Field};\nexport default CharDetails;","import RowBlock from './rowBlock';\nexport default RowBlock;","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\nconst RowBlock = ({ left, right }: any) => {\n  return (\n    <Row>\n      <Col md=\"6\">{left}</Col>\n      <Col md=\"6\">{right}</Col>\n    </Row>\n  );\n};\n\nexport default RowBlock;\n","import React, { Component } from \"react\";\nimport ItemList from \"../itemList\";\nimport ItemDetails, { Field } from \"../itemDetails\";\nimport ErrorMessage from \"../errorMessage\";\nimport gotService from \"../../services/gotService\";\nimport RowBlock from \"../rowBlock\";\nimport { RandomCharIterface } from \"../interfece\";\n\nexport default class CharacterPage extends Component<RandomCharIterface, {}> {\n  gotService = new gotService();\n\n  state = {\n    selectedChar: null,\n    error: false,\n  };\n\n  onItemSelected = (id: any) => {\n    this.setState({\n      selectedChar: id,\n    });\n  };\n\n  componentDidCatch() {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n\n    const itemList = (\n      <ItemList\n        onItemSelected={this.onItemSelected}\n        getData={this.gotService.getAllCharacters}\n        renderItem={({ name, gender }) => `${name} (${gender})`}\n      />\n    );\n\n    const itemDetails = (\n      <ItemDetails\n        itemId={this.state.selectedChar}\n        getData={this.gotService.getCharacter}\n      >\n        <Field field=\"gender\" label=\"Gender\" />\n        <Field field=\"born\" label=\"Born\" />\n        <Field field=\"died\" label=\"Died\" />\n        <Field field=\"culture\" label=\"Culture\" />\n      </ItemDetails>\n    );\n\n    return <RowBlock left={itemList} right={itemDetails} />;\n  }\n}\n","import React, { Component } from \"react\";\nimport ItemList from \"../itemList\";\nimport ErrorMessage from \"../errorMessage\";\nimport gotService from \"../../services/gotService\";\nimport { withRouter } from \"react-router-dom\";\n\nexport class BooksPage extends Component<any> {\n  gotService = new gotService();\n\n  state = {\n    selectedBook: null,\n    error: false,\n  };\n  onItemSelected = (id: any) => {\n    this.setState({\n      selectedBook: id,\n    });\n  };\n\n  componentDidCatch() {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n\n    return (\n      <ItemList\n        onItemSelected={(itemId) => {\n          this.props.history.push(itemId);\n        }}\n        getData={this.gotService.getAllBooks}\n        renderItem={({ name }) => name}\n      />\n    );\n  }\n}\nexport default withRouter(BooksPage);\n","import React, { Component } from \"react\";\nimport ItemList from \"../itemList\";\nimport ItemDetails, { Field } from \"../itemDetails\";\nimport ErrorMessage from \"../errorMessage\";\nimport gotService from \"../../services/gotService\";\nimport RowBlock from \"../rowBlock\";\n\nexport default class HousesPage extends Component {\n  gotService = new gotService();\n\n  state = {\n    selectedHouse: null,\n    error: false,\n  };\n\n  onItemSelected = (id: any) => {\n    this.setState({\n      selectedHouse: id,\n    });\n  };\n\n  componentDidCatch() {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n\n    const itemList = (\n      <ItemList\n        onItemSelected={this.onItemSelected}\n        getData={this.gotService.getAllHouses}\n        renderItem={({ name }) => name}\n      />\n    );\n\n    const itemDetails = (\n      <ItemDetails\n        itemId={this.state.selectedHouse}\n        getData={this.gotService.getHouse}\n      >\n        <Field field=\"region\" label=\"Region\" />\n        <Field field=\"words\" label=\"Words\" />\n        <Field field=\"titles\" label=\"Titles\" />\n        <Field field=\"ancestralWeapons\" label=\"Ancestral Weapons\" />\n      </ItemDetails>\n    );\n\n    return <RowBlock left={itemList} right={itemDetails} />;\n  }\n}\n","import React, { Component } from \"react\";\nimport gotService from \"../../services/gotService\";\nimport ItemDetails, { Field } from \"../itemDetails\";\nimport { BooksItemInterface } from \"../interfece\";\n\nexport default class BooksItem extends Component<BooksItemInterface, {}, any> {\n  gotService = new gotService();\n\n  render() {\n    return (\n      <ItemDetails itemId={this.props.bookId} getData={this.gotService.getBook}>\n        <Field field=\"numberOfPages\" label=\"Number of pages\" />\n        <Field field=\"publisher\" label=\"Publisher\" />\n        <Field field=\"released\" label=\"Released\" />\n      </ItemDetails>\n    );\n  }\n}\n","import App from './app';\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport Header from \"../header\";\nimport RandomChar from \"../randomChar\";\nimport ErrorMessage from \"../errorMessage\";\nimport { CharacterPage, BooksPage, HousesPage, BooksItem } from \"../pages\";\nimport gotService from \"../../services/gotService\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { RandomCharIterface } from \"../interfece\";\nimport { Button } from \"react-bootstrap\";\n\nimport \"./app.css\";\n\nexport default class App extends Component<\n  RandomCharIterface,\n  { showRandomChar: boolean; error: boolean },\n  any\n> {\n  gotService = new gotService();\n\n  state = {\n    showRandomChar: true,\n    error: false,\n    selectedHouse: 20,\n  };\n\n  componentDidCatch() {\n    console.log(\"error\");\n    this.setState({\n      error: true,\n    });\n  }\n\n  toggleRandomChar = () => {\n    this.setState((state) => {\n      return {\n        showRandomChar: !state.showRandomChar,\n      };\n    });\n  };\n\n  render(): JSX.Element {\n    const char = this.state.showRandomChar ? <RandomChar /> : null;\n\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n\n    return (\n      <Router>\n        <div className=\"app\">\n          <Container>\n            <Header />\n          </Container>\n          <Container>\n            <Row>\n              <Col lg={{ span: 5, offset: 0 }}>\n                {char}\n                <Button\n                  variant=\"outline-secondary\"\n                  className=\"toggle-btn\"\n                  onClick={this.toggleRandomChar}\n                >\n                  Toggle random character\n                </Button>\n              </Col>\n            </Row>\n            <Route\n              path=\"/\"\n              component={() => <h1>Welcome to GOT DB</h1>}\n              exact\n            />\n            <Route path=\"/characters\" component={CharacterPage} />\n            <Route path=\"/books\" component={BooksPage} exact />\n            <Route\n              path=\"/books/:id\"\n              render={({ match }) => {\n                const { id } = match.params;\n                return <BooksItem bookId={id - 40} />;\n              }}\n            />\n            <Route path=\"/houses\" component={HousesPage} />\n          </Container>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}